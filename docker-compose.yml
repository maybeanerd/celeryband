services:
  traefik:
    image: 'traefik:v3.5.3'
    container_name: 'Reverse-Proxy'
    command:
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
    ports:
      - 80:80
    depends_on:
      - celeryband
    restart: always
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    networks:
      - internal

  celeryband:
    build:
      context: .
      args:
        - COMMIT_HASH=abcdefg
    image: ${IMAGE_NAME}
    networks:
      - internal
    volumes:
      - db-data:/app/data
    environment:
      - NUXT_SESSION_PASSWORD=PLEASE_PROVIDE_A_SECURE_SECRET
      - OBFUSCATION_SALT=PLEASE_PROVIDE_A_SECURE_SALT
      - ROLES=software engineer,product manager,designer,director
      - SENIORITY_LEVELS=junior,professional,senior,staff,principal
      - DEPARTMENTS=gamma,beta,omega
      - CURRENCY=â‚¬
      - ACCEPTED_DOMAIN=your-company.com
      - SERVER_URL=https://your-celeryband.com
      - NUXT_PUBLIC_DISCLAIMER="This is a legal disclaimer that this platform is pretty cool."

      - SMTP_HOST=dummy.smtp.com
      - SMTP_PORT=587
      - SMTP_USERNAME=dummyUser
      - SMTP_PASSWORD=dummyPassword
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.celeryband.rule=PathPrefix(`/`)'
      - 'traefik.http.services.celeryband.loadbalancer.server.port=3000'

volumes:
  db-data:

networks:
  internal:
